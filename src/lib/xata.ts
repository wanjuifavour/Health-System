// Generated by Xata Codegen 0.30.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "User",
    columns: [
      { name: "email", type: "text", notNull: true, defaultValue: "null" },
      { name: "name", type: "text", notNull: true, defaultValue: "null" },
      { name: "role", type: "text", notNull: true, defaultValue: "null" },
      { name: "facilityId", type: "link", link: { table: "Facility" } },
      { name: "image", type: "text" },
      { name: "oauthProvider", type: "text" },
      { name: "oauthId", type: "text" },
      { name: "password", type: "text" },
    ],
    revLinks: [
      { column: "createdBy", table: "Client" },
      { column: "createdBy", table: "ProgramEnrollment" },
      { column: "createdBy", table: "ClientVisit" },
    ],
  },
  {
    name: "Facility",
    columns: [
      { name: "name", type: "text", notNull: true, defaultValue: "null" },
      { name: "address", type: "text" },
      { name: "phone", type: "int" },
      { name: "email", type: "text", notNull: true, defaultValue: "null" },
    ],
    revLinks: [{ column: "facilityId", table: "User" }],
  },
  {
    name: "HealthProgram",
    columns: [
      { name: "name", type: "text", notNull: true, defaultValue: "null" },
      { name: "description", type: "text" },
      { name: "code", type: "int", unique: true },
      { name: "active", type: "bool", defaultValue: "true" },
      { name: "requiredFields", type: "multiple" },
    ],
    revLinks: [{ column: "programId", table: "ProgramEnrollment" }],
  },
  {
    name: "Client",
    columns: [
      { name: "firstName", type: "text", notNull: true, defaultValue: "null" },
      { name: "lastName", type: "text", notNull: true, defaultValue: "null" },
      {
        name: "dateOfBirth",
        type: "text",
        notNull: true,
        defaultValue: "null",
      },
      { name: "gender", type: "text", notNull: true, defaultValue: "null" },
      { name: "nationalId", type: "text" },
      { name: "email", type: "text" },
      { name: "address", type: "text" },
      { name: "emergencyContactName", type: "text" },
      { name: "emergencyContactRelationship", type: "text" },
      { name: "createdBy", type: "link", link: { table: "User" } },
      { name: "phone", type: "text" },
      { name: "emergencyContactPhone", type: "text" },
    ],
    revLinks: [
      { column: "clientId", table: "ProgramEnrollment" },
      { column: "clientId", table: "ClientVisit" },
    ],
  },
  {
    name: "ProgramEnrollment",
    columns: [
      { name: "clientId", type: "link", link: { table: "Client" } },
      { name: "programId", type: "link", link: { table: "HealthProgram" } },
      { name: "enrollmentDate", type: "datetime" },
      { name: "status", type: "text", notNull: true, defaultValue: "null" },
      { name: "programSpecificData", type: "json" },
      { name: "notes", type: "text" },
      { name: "createdBy", type: "link", link: { table: "User" } },
    ],
    revLinks: [{ column: "programEnrollmentId", table: "ClientVisit" }],
  },
  {
    name: "ClientVisit",
    columns: [
      { name: "clientId", type: "link", link: { table: "Client" } },
      {
        name: "programEnrollmentId",
        type: "link",
        link: { table: "ProgramEnrollment" },
      },
      { name: "visitDate", type: "datetime" },
      { name: "visitType", type: "text" },
      { name: "notes", type: "text" },
      { name: "createdBy", type: "link", link: { table: "User" } },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type User = InferredTypes["User"];
export type UserRecord = User & XataRecord;

export type Facility = InferredTypes["Facility"];
export type FacilityRecord = Facility & XataRecord;

export type HealthProgram = InferredTypes["HealthProgram"];
export type HealthProgramRecord = HealthProgram & XataRecord;

export type Client = InferredTypes["Client"];
export type ClientRecord = Client & XataRecord;

export type ProgramEnrollment = InferredTypes["ProgramEnrollment"];
export type ProgramEnrollmentRecord = ProgramEnrollment & XataRecord;

export type ClientVisit = InferredTypes["ClientVisit"];
export type ClientVisitRecord = ClientVisit & XataRecord;

export type DatabaseSchema = {
  User: UserRecord;
  Facility: FacilityRecord;
  HealthProgram: HealthProgramRecord;
  Client: ClientRecord;
  ProgramEnrollment: ProgramEnrollmentRecord;
  ClientVisit: ClientVisitRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Wanjui-s-workspace-ff65m2.us-east-1.xata.sh/db/cema-task",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
